{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,UAGxC,SAASE,GAAcC,SAAEA,EAAQC,aAAEA,EAAYC,OAAEA,EAAMC,KAAEA,IACvD,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLV,IAAaW,OAAOT,EAAOU,SAC7Bd,EAASe,UAAW,GAElBN,EACFF,EAAQ,C,SAAEL,E,aAAUC,IAEpBK,EAAO,C,SAAEN,E,aAAUC,GAAe,GAEnCA,EAAa,G,CAdpBN,EAAKmB,iBAAiB,UAkBtB,SAAuBC,GACrBA,EAAMC,iBACN,MAAMd,OAAEA,EAAMe,MAAEA,EAAKd,KAAEA,GAASY,EAAMG,cAAcC,SACpD,IAAIC,EAAW,EACXC,EAAeV,OAAOM,EAAML,OAChCd,EAASwB,aAAa,YAAY,GAClC,IAAK,IAAIC,EAAI,EAAGA,GAAKrB,EAAOU,MAAOW,IACjCH,EAAWG,EACXC,QAAQC,IAAI,WAAYL,EAAU,OAAQC,GAC1CtB,EAAc,CAAEC,SAAAoB,EAAUnB,aAAAoB,E,OAAcnB,E,KAAQC,IAC7CuB,MAAK,EAAC1B,SAAEA,EAAQC,aAAEA,MACjB0B,EAAAlC,GAASmC,OAAOC,KACd,uBAAqB7B,QAAiBC,MAAiB,IAG1D6B,OAAM,EAAC9B,SAAEA,EAAQC,aAAEA,MAClB0B,EAAAlC,GAASmC,OAAOG,QACd,sBAAoB/B,QAAeC,MAAiB,IAG1DoB,GAA8BV,OAAOR,EAAKS,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst startBtn = document.querySelector('button');\nform.addEventListener('submit', startPromises);\n\nfunction createPromise({ position, currentDelay, amount, step }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (position === Number(amount.value)) {\n        startBtn.disabled = false;\n      }\n      if (shouldResolve) {\n        resolve({ position, currentDelay });\n      } else {\n        reject({ position, currentDelay });\n      }\n    }, currentDelay);\n  });\n}\n\nfunction startPromises(event) {\n  event.preventDefault();\n  const { amount, delay, step } = event.currentTarget.elements;\n  let position = 0;\n  let currentDelay = Number(delay.value);\n  startBtn.setAttribute('disabled', true);\n  for (let i = 1; i <= amount.value; i++) {\n    position = i;\n    console.log('position', position, 'step', currentDelay);\n    createPromise({ position, currentDelay, amount, step })\n      .then(({ position, currentDelay }) => {\n        Notiflix.Notify.info(\n          `✅ Fulfilled promise ${position} in ${currentDelay}ms`\n        );\n      })\n      .catch(({ position, currentDelay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${currentDelay}ms`\n        );\n      });\n    currentDelay = currentDelay + Number(step.value);\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$startBtn","$47d4ff9957288465$var$createPromise","position","currentDelay","amount","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Number","value","disabled","addEventListener","event","preventDefault","delay","currentTarget","elements","position1","currentDelay1","setAttribute","i","console","log","then","$parcel$interopDefault","Notify","info","catch","failure"],"version":3,"file":"03-promises.99eef1c8.js.map"}