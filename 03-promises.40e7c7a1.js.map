{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,UAGxC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXPN,EAAKc,iBAAiB,UAetB,SAAuBC,GACrBA,EAAMC,iBACNb,EAASc,UAAW,EAIpB,IAHA,IAAgCC,EAAAH,EAAMI,cAAcC,SAA5CC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBZ,MAAOiB,EAASL,EAATK,KACnBC,EAAW,EACXC,EAAeC,OAAOJ,EAAMK,OACvBC,EAAI,EAAGA,GAAKP,EAAOM,MAAOC,KAC5BA,EAAIP,KACPlB,EAASc,UAAW,GAEtBO,EAAWI,EACXC,QAAQC,IAAI,WAAYN,EAAU,OAAQC,GAC1CrB,EAAcoB,EAAUC,GACrBM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAAnC,GAASoC,OAAOC,KAAK,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEpE+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAAnC,GAASoC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjDmB,GAA8BC,OAAOH,EAAKI,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst startBtn = document.querySelector('button');\nform.addEventListener('submit', startPromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction startPromises(event) {\n  event.preventDefault();\n  startBtn.disabled = true;\n  const { amount, delay, step } = event.currentTarget.elements;\n  let position = 0;\n  let currentDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i++) {\n    if ((i = amount)) {\n      startBtn.disabled = false;\n    }\n    position = i;\n    console.log('position', position, 'step', currentDelay);\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    currentDelay = currentDelay + Number(step.value);\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$startBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","disabled","_elements","currentTarget","elements","amount","delay1","step","position1","currentDelay","Number","value","i","console","log","then","param","$parcel$interopDefault","Notify","info","concat","catch","failure"],"version":3,"file":"03-promises.40e7c7a1.js.map"}